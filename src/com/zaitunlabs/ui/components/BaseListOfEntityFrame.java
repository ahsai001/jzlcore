/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.zaitunlabs.ui.components;

import com.zaitunlabs.databases.BaseDao;
import com.zaitunlabs.databases.Entity;
import com.zaitunlabs.resources.IconResource;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.Collections;
import java.util.List;
import javax.swing.JDialog;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ahmad
 */
public abstract class BaseListOfEntityFrame<T extends Entity> extends javax.swing.JFrame {
    protected List<T> dataList = Collections.emptyList();
    private final JPopupMenu popupMenu = new JPopupMenu();
    /**
     * Creates new form CommonManagerEntityFrame
     */
    public BaseListOfEntityFrame(String title) {
        super();
        initComponents();
        init(title);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table1 = new com.zaitunlabs.ui.components.Table();
        addButton1 = new com.zaitunlabs.ui.components.AddButton();
        cancelButton1 = new com.zaitunlabs.ui.components.CancelButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Data Manager");

        table1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(table1);

        addButton1.setText("Tambah");

        cancelButton1.setText("Tutup");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 291, Short.MAX_VALUE)
                        .addComponent(addButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(42, 42, 42))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {addButton1, cancelButton1});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(addButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancelButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 365, Short.MAX_VALUE)
                .addGap(42, 42, 42))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButton1ActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_cancelButton1ActionPerformed

    
    
    protected void showWarning(String message){
        JOptionPane.showMessageDialog(this, message, "Failed", JOptionPane.ERROR_MESSAGE);
    }
    
    protected void showSuccess(String message){
        JOptionPane.showMessageDialog(this, message, "Success", JOptionPane.INFORMATION_MESSAGE);
    }
    
    protected abstract BaseDao<T> getDaoImpl();
    
    protected abstract BaseInputOfEntityDialog<T> getInputOfEntityDialog();
    
    protected abstract String[] getColumnNamesForTable();
    protected abstract void addRowInTable(DefaultTableModel tableModel, T entity);
    
    
    protected T getSelectedEntityOnTable(){
        int row = table1.getSelectedRow();
        T entity = dataList.get(row);
        return entity;
    }
    
    protected void disableUpdate(){
        popupMenu.remove(0);
    }
    
    
    private void loadData(){
        BaseDao<T> dao = getDaoImpl();
        
        try {
            dataList = dao.getAll();
        } catch (Exception e) {
            e.printStackTrace();
        }
        
        
        DefaultTableModel tableModel = (DefaultTableModel) table1.getModel();
        tableModel.setRowCount(0);
        if(!dataList.isEmpty()){
            for (T entity : dataList) {
                addRowInTable(tableModel, entity);
            }
        }
    }
    
    
    private void open(JDialog dialog){
        dialog.setLocationRelativeTo(this);
        dialog.setVisible(true);
        dialog.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent e) {
                super.windowClosed(e); //To change body of generated methods, choose Tools | Templates.
                loadData();
            }
            
        });
    }
    
    private void startUpdateDataDialog(){
        T entity = getSelectedEntityOnTable();
        BaseInputOfEntityDialog<T> dialog = getInputOfEntityDialog();
        dialog.setEntity(entity);
        open(dialog);
    }
    
    private void startAddDataDialog(){
        BaseInputOfEntityDialog<T> dialog = getInputOfEntityDialog();
        open(dialog);
    }
    
    protected void deleteData(){
        int confirm = JOptionPane.showConfirmDialog(this, "Yakin hapus?");
        if(confirm == JOptionPane.YES_OPTION){
            try {
                BaseDao<T> dao = getDaoImpl();
                T selectedEntity = getSelectedEntityOnTable();
                dao.delete(selectedEntity);
                showSuccess("Data berhasil dihapus");
                loadData();
            } catch (Exception e) {
                showWarning("Data gagal dihapus");
            }
        }
    }
    
    private void createContextMenuOnTable(){
        JMenuItem deleteMenuItem = new JMenuItem("Hapus", IconResource.getCancelIcon());
        JMenuItem updateMenuItem = new JMenuItem("Update", IconResource.getEditIcon());
        
        updateMenuItem.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                startUpdateDataDialog();
            }
        });
        
        deleteMenuItem.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                deleteData();
            }
        });
        
        popupMenu.add(updateMenuItem);
        popupMenu.add(deleteMenuItem);
        table1.setComponentPopupMenu(popupMenu);
    }
    
    
    private void initColumns(){
        DefaultTableModel model = new DefaultTableModel();
        for (String columName : getColumnNamesForTable()) {
            model.addColumn(columName);
        }
        
        table1.setModel(model);
    }
    
    
    private void init(String title){
        initColumns();
        jLabel1.setText(title);
        setTitle(title);
        createContextMenuOnTable();
        loadData();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.zaitunlabs.ui.components.AddButton addButton1;
    private com.zaitunlabs.ui.components.CancelButton cancelButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private com.zaitunlabs.ui.components.Table table1;
    // End of variables declaration//GEN-END:variables
}
